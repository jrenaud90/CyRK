# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MacOS Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  push:

jobs:

  test-macos-latest:
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, 'run tests')

    defaults:
      run:
        shell: bash -el {0}
    name: Test CyRK on MacOS (latest; arm64)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: cyrk_test
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
        
      - name: Conda info
        shell: bash -el {0}
        run: conda info
        
      - name: install llvm # openMP does not play nice with clang on MacOS; also some versions of macos use older gcc so there is a need to install latest.
        shell: bash -el {0}
        run: |
          brew install llvm libomp

      - name: Install package
        shell: bash -el {0}
        # export CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp -lgomp"
        run: |
          conda install -c conda-forge nomkl llvm-openmp
          export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
          export LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/libomp/include"
          export CC=/opt/homebrew/opt/llvm/bin/clang
          export CXX=/opt/homebrew/opt/llvm/bin/clang++
          python -m pip install -v .
          conda install -c conda-forge pytest pytest-xdist
      
      - name: Manual Test
        run: |
          cd Tests/E_CySolver_Tests/
          python -c "from test_a_cysolve_ivp import test_cysolve_ivp; print('Import Success!'); test_cysolve_ivp(True, False, False, False, False, 1, 0.0, 10_000, True); print('DONE!')"
          cd ../..
        
      - name: Run pytest
        shell: bash -el {0}
        run: pytest -n auto --capture=sys -v Tests/
  
  
  test-macos-13:
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, 'run tests')

    defaults:
      run:
        shell: bash -el {0}
    name: Test CyRK on MacOS (v13; x64-86)
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: cyrk_test
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
        
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      
      - name: install llvm # openMP does not play nice with clang on MacOS; also some versions of macos use older gcc so there is a need to install latest.
        shell: bash -el {0}
        run: |
          brew install llvm libomp

      - name: Install package
        shell: bash -el {0}
        # export CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp -lgomp"
        run: |
          conda install -c conda-forge nomkl llvm-openmp
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export LDFLAGS="-L/usr/local/opt/libomp/lib"
          export CPPFLAGS="-I/usr/local/opt/libomp/include"
          export CC=/usr/local/opt/llvm/bin/clang
          export CXX=/usr/local/opt/llvm/bin/clang++
          python -m pip install -v .
          conda install -c conda-forge pytest pytest-xdist

      - name: Manual Test
        run: |
          cd Tests/E_CySolver_Tests/
          python -c "from test_a_cysolve_ivp import test_cysolve_ivp; print('Import Success!'); test_cysolve_ivp(True, False, False, False, False, 1, 0.0, 10_000, True); print('DONE!')"
          cd ../..
        
      - name: Run pytest
        shell: bash -el {0}
        run: pytest -n auto --capture=sys -v Tests/
