#pragma once

#include "cysolver.hpp"
#include "rk.hpp"
#include <Python.h>

// "pysolver_cyhook_api.h" is generated by Cython when building the CyRK project.
// It is based off of the "pysolver_cyhook.pyx" file. 
// Read more about how C++ can call python functions here:
// https://stackoverflow.com/questions/10126668/can-i-override-a-c-virtual-function-within-python-with-cython
// and here: https://github.com/dashesy/pyavfcam/blob/master/src/avf.pyx#L27
#include "pysolver_cyhook_api.h"

struct _object;
typedef _object PyObject;

class PySolverBase : public CySolverBase
{
// ** Public Attributes **
public:
    PyObject* cython_extension_class_instance = nullptr;

// ** Public Methods ***
public:
    // Constructors
    PySolverBase();
    PySolverBase(
        // Base Class input arguments
        PyObject* cython_extension_class_instance,
        std::shared_ptr<CySolverResult> storage_ptr,
        const double t_start,
        const double t_end,
        double* y0_ptr,
        size_t num_y,
        bool capture_extra = false,
        size_t num_extra = 0,
        double* args_ptr = nullptr,
        size_t max_num_steps = 0,
        size_t max_ram_MB = 2000
    );
    // Destructors
    virtual ~PySolverBase();

    // Override base class diffeq function
    virtual void diffeq() override;

};

class PyRK45 : public RK45
{
public:
    PyObject* cython_extension_class_instance = nullptr;
    
public:
    // Constructors
    PyRK45();
    PyRK45(
        // Base Class input arguments
        PyObject* cython_extension_class_instance,
        std::shared_ptr<CySolverResult> storage_ptr,
        const double t_start,
        const double t_end,
        double* y0_ptr,
        size_t num_y,
        bool capture_extra = false,
        size_t num_extra = 0,
        double* args_ptr = nullptr,
        size_t max_num_steps = 0,
        size_t max_ram_MB = 2000,
        // RKSolver input arguments
        double rtol = 1.0e-3,
        double atol = 1.0e-6,
        double* rtols_ptr = nullptr,
        double* atols_ptr = nullptr,
        double max_step_size = MAX_STEP,
        double first_step_size = 0.0
    );
    // Destructors
    virtual ~PyRK45();

    // Override base class diffeq function
    virtual void diffeq() override;

};