/* Generated by Cython 3.0.11 */

#ifndef __PYX_HAVE__CyRK__cy__pysolver_cyhook
#define __PYX_HAVE__CyRK__cy__pysolver_cyhook

#include "Python.h"

/* "CyRK/cy/pysolver_cyhook.pxd":1
 * ctypedef public api void (*DiffeqMethod)(object py_instance) noexcept             # <<<<<<<<<<<<<<
 */
typedef void (*DiffeqMethod)(PyObject *);

#ifndef __PYX_HAVE_API__CyRK__cy__pysolver_cyhook

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C void call_diffeq_from_cython(PyObject *, DiffeqMethod);

#endif /* !__PYX_HAVE_API__CyRK__cy__pysolver_cyhook */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpysolver_cyhook(void);
#else
/* WARNING: Use PyImport_AppendInittab("pysolver_cyhook", PyInit_pysolver_cyhook) instead of calling PyInit_pysolver_cyhook directly from Python 3.5 */
PyMODINIT_FUNC PyInit_pysolver_cyhook(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"pysolver_cyhook\", PyInit_pysolver_cyhook) instead of calling PyInit_pysolver_cyhook directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"pysolver_cyhook\", PyInit_pysolver_cyhook) instead of calling PyInit_pysolver_cyhook directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"pysolver_cyhook\", PyInit_pysolver_cyhook) instead of calling PyInit_pysolver_cyhook directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit_pysolver_cyhook_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit_pysolver_cyhook() __PYX_WARN_IF_PyInit_pysolver_cyhook_INIT_CALLED(PyInit_pysolver_cyhook())
#endif
#endif

#endif /* !__PYX_HAVE__CyRK__cy__pysolver_cyhook */
